线程的概念：一个程序里面不同的执行路径，可以放在不同的cpu里面同步运行的
如何启动一个线程:
       1.继承Thread 调用start() 2.实现Runnable接口 3.线程池

synchronized
       1.synchronized的代码块是原子操作，不可分
       2.synchronized的锁是可重入的，一个同步方法可以调用另外一个同步方法，一个线程已经拥有了某个对象的锁，
         再次申请的时候仍然会得到该对象的锁;子类的同步方法调用父类的同步方法也是可以的
       3.同步方法和非同步方法是可以同时调用
       4.线程抛出异常会释放锁，线程是会将同步锁释放的，要小心处理异常
       5.死锁 解决方案：1.加锁顺序 2.加锁时效


volatile 变量在多个线程可见，但是并不能保证原子性，深入了解去看Java Memory Model(JMM)
       volatile 和 synchronized的区别?

两个线程之间的通讯
实现一个容器，提供两个方法 add size，写两个线程线程1添加10个元素进去，线程2监听容器的个数
当个数到5个，线程2给出提示并结束。

ReentrantLock 可以替代synchronized，灵活使用，lock/tryLock；指定公平锁；
              配合Condition使用，精确唤醒指定线程

ThreadLocal

singleton 单例模式: 在内存中永远只有一个对象！
最后，不管采取何种方案，请时刻牢记单例的三大要点：
线程安全
延迟加载
序列化与反序列化安全
  http://www.importnew.com/18872.html
  http://blog.csdn.net/yangkai_hudong/article/details/50628172